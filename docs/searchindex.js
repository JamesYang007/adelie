Search.setIndex({"docnames": ["api_reference", "generated/adelie.bcd.objective", "generated/adelie.bcd.root", "generated/adelie.bcd.root_function", "generated/adelie.bcd.root_lower_bound", "generated/adelie.bcd.root_upper_bound", "generated/adelie.bcd.solve", "generated/adelie.grpnet.objective", "generated/adelie.grpnet.solve_pin", "generated/adelie.matrix.base", "generated/adelie.matrix.dense", "generated/adelie.state.base", "generated/adelie.state.deduce_states", "generated/adelie.state.pin_base", "generated/adelie.state.pin_naive", "index"], "filenames": ["api_reference.rst", "generated/adelie.bcd.objective.rst", "generated/adelie.bcd.root.rst", "generated/adelie.bcd.root_function.rst", "generated/adelie.bcd.root_lower_bound.rst", "generated/adelie.bcd.root_upper_bound.rst", "generated/adelie.bcd.solve.rst", "generated/adelie.grpnet.objective.rst", "generated/adelie.grpnet.solve_pin.rst", "generated/adelie.matrix.base.rst", "generated/adelie.matrix.dense.rst", "generated/adelie.state.base.rst", "generated/adelie.state.deduce_states.rst", "generated/adelie.state.pin_base.rst", "generated/adelie.state.pin_naive.rst", "index.rst"], "titles": ["API Reference", "adelie.bcd.objective", "adelie.bcd.root", "adelie.bcd.root_function", "adelie.bcd.root_lower_bound", "adelie.bcd.root_upper_bound", "adelie.bcd.solve", "adelie.grpnet.objective", "adelie.grpnet.solve_pin", "adelie.matrix.base", "adelie.matrix.dense", "adelie.state.base", "adelie.state.deduce_states", "adelie.state.pin_base", "adelie.state.pin_naive", "Adelie Documentation"], "terms": {"h": [3, 5], "float": [1, 2, 3, 4, 5, 6, 7, 13, 14], "quad": [1, 2, 3, 4, 5, 6], "ndarrai": [1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 14], "linear": [1, 2, 3, 4, 5, 6], "l1": [1, 2, 3, 4, 6], "comput": [1, 3, 4, 5, 7], "bcd": 13, "root": [3, 4, 5, 6], "function": [2, 3, 4, 5], "The": [1, 2, 3, 4, 5, 6, 7, 8, 10], "i": [1, 2, 3, 4, 5, 6, 7, 8, 13], "given": [1, 2, 3, 4, 5, 6, 7, 8, 13], "begin": [1, 3, 7], "align": [1, 3, 7], "varphi": [3, 4, 5], "sum": [3, 7], "limits_": [3, 7], "1": [1, 3, 7, 13], "p": [1, 2, 3, 4, 5, 6, 7, 13], "frac": [1, 3, 7], "v_i": [3, 5], "2": [1, 3, 7, 13], "sigma_": [2, 3, 5, 6], "ii": [2, 3, 5, 6], "lambda": [3, 4, 7], "end": [1, 3, 7], "where": [1, 2, 3, 4, 5, 6, 7, 8, 13], "geq": [1, 3, 4, 7], "0": [1, 2, 3, 4, 5, 6, 7, 8, 13, 14], "sigma": [1, 3], "mathbb": [1, 3], "r": [1, 3, 13], "_": [1, 3], "time": [1, 3, 13], "diagon": [1, 3, 8, 13], "v": [1, 2, 3, 4, 6], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "valu": [1, 3, 5, 13], "which": [1, 3], "evalu": [1, 3], "np": [1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 14], "quadrat": [1, 3], "compon": [1, 3], "ell_1": [1, 3], "return": [1, 2, 3, 4, 5, 6, 7, 8, 12], "lower": 4, "bound": [4, 5], "guarante": [4, 5], "non": [2, 4, 5, 13], "neg": [2, 4, 5, 13], "satisfi": [4, 5], "bcd_root_funct": [], "see": [2, 4, 5, 6, 8, 12, 14], "zero_tol": 5, "1e": [2, 5, 6, 14], "10": 5, "an": [5, 13], "upper": 5, "howev": 5, "mai": 5, "leq": 5, "too": 5, "larg": 5, "A": 5, "consid": 5, "zero": [5, 8, 13], "its": 5, "absolut": 5, "less": 5, "than": [5, 13], "equal": 5, "l": 13, "l2": [1, 6], "tol": [2, 6, 13, 14], "max_it": [2, 6], "int": [2, 6, 13, 14], "solver": [2, 6, 8], "str": [2, 6], "newton_ab": [2, 6], "kwarg": 6, "solv": [2, 8], "block": [8, 13], "coordin": 13, "descent": 13, "updat": [6, 13], "group": [6, 7, 8, 12, 13, 14], "elast": [6, 7, 8, 13], "net": [6, 7, 8, 13], "obtain": 6, "mathrm": [], "minim": [6, 8], "beta": [1, 6, 7, 13], "top": [1, 8, 13], "lambda_1": [1, 2, 6], "_2": [1, 2, 4, 6, 7], "lambda_2": [1, 6], "lambda_i": 1, "ell_2": 1, "converg": [2, 6, 13], "toler": [2, 6, 13], "max": [2, 6], "number": [2, 6, 7, 13], "iter": [2, 6, 13], "option": [2, 5, 6, 14], "type": [2, 6, 8], "must": [2, 6, 9, 11, 13], "one": [2, 6, 8, 13], "brent": [2, 6], "newton": [2, 6], "newton_br": [2, 6], "newton_abs_debug": 6, "ista": [2, 6], "fista": [2, 6], "fista_adar": [2, 6], "default": [2, 5, 6], "smart_init": 6, "bool": 6, "If": 6, "true": [6, 13], "ab": 6, "method": [2, 6, 9, 10, 11, 13, 14], "invok": 6, "find": 6, "smart": 6, "initi": 6, "point": 6, "befor": 6, "start": [6, 7, 13], "": [2, 6, 8, 12, 13], "It": [4, 5, 6, 13], "onli": [2, 6, 13], "us": 6, "when": [2, 5, 6], "class": [9, 10, 11, 13, 14], "group_siz": [7, 12, 13, 14], "alpha": [7, 13, 14], "penalti": [7, 13, 14], "strong_set": [12, 13, 14], "strong_g1": [12, 13, 14], "strong_g2": [12, 13, 14], "strong_begin": [12, 13, 14], "strong_a_diag": [], "lmda": [7, 13, 14], "max_cd": [13, 14], "thr": [], "cond_0_thresh": [], "cond_1_thresh": [], "newton_tol": [13, 14], "newton_max_it": [13, 14], "rsq": [13, 14], "resid": 14, "strong_beta": [13, 14], "strong_grad": [13, 14], "active_set": [12, 13, 14], "active_g1": [12, 13, 14], "active_g2": [12, 13, 14], "active_begin": [12, 13, 14], "active_ord": [12, 13, 14], "is_act": [12, 13, 14], "list": [7, 8, 13], "naiv": 14, "base": [13, 14], "state": 8, "thi": [9, 11, 13], "all": [9, 11], "g": [7, 12, 13], "indic": [2, 6, 7, 13], "each": [7, 13], "size": [7, 13], "correspond": [7, 13], "element": [7, 13], "factor": [7, 13], "strong": [8, 13], "take": 13, "th": [7, 13], "s1": [12, 13], "subset": [2, 6, 13], "s2": [12, 13], "more": 13, "index": 13, "read": 13, "exampl": [], "w": [7, 12, 13], "x_k": [8, 13], "along": 13, "b": 13, "k": 13, "regular": [7, 13], "sequenc": 13, "maximum": 13, "earli": 13, "stop": 13, "rule": 13, "check": 13, "slope": 13, "curvatur": 13, "step": [], "n": 7, "residu": [], "y": [7, 13], "x": [7, 8, 12, 13, 14], "coeffici": [7, 8, 13], "vector": [6, 7, 8, 13], "set": [8, 13], "gradient": 13, "activ": 13, "among": [], "a1": [12, 13], "similar": [], "descript": 14, "a2": [12, 13], "sort": 13, "ascend": 13, "order": 13, "boolean": 13, "whether": 13, "solut": [6, 13], "dens": [], "__init__": [9, 10, 11, 13, 14], "none": 13, "attribut": [13, 14], "arg": [], "featur": [7, 13], "matrix": [7, 12, 13], "case": [], "full": 13, "groupelnetnaivebasest": [], "object": [6, 8, 9], "out": [], "dict": [2, 6], "ani": [2, 6], "taken": [2, 6, 13], "follow": [2, 6], "problem": 8, "j": 7, "w_j": 7, "left": 7, "beta_j": 7, "right": 7, "respons": 7, "ar": [2, 6, 7], "groupelnetnaivedensest": [], "document": 8, "arrai": 14, "like": 14, "same": [8, 13], "posit": [], "input": 1, "bcd_updat": [], "whenev": [4, 5], "even": 5, "small": 5, "enough": 5, "we": [5, 8], "assum": [5, 8], "bcd_object": [], "known": [2, 6], "have": [2, 6, 8], "poor": [2, 6], "result": [2, 6, 8], "groupelnetresult": [], "detail": [], "12": [2, 6, 14], "1000": [2, 6, 14], "root_funct": [2, 4, 5], "exist": [2, 6], "well": [], "defin": [8, 13], "v_": [2, 6], "mat": 10, "numpi": [], "dtype": [], "float64": [], "float32": [], "f": [], "creat": 10, "viewer": 10, "union": 13, "underli": [], "data": [], "storag": [], "convent": [], "c": [9, 11], "column": [7, 8, 13], "pin_naiv": 8, "pin": [8, 13, 14], "constraint": 8, "beta_": 8, "denot": 8, "forc": 8, "outsid": 8, "after": 8, "run": 8, "view": 10, "copi": [], "made": [], "inconsist": [], "major": [], "exactli": [], "base64": [12, 13, 14], "base32": [12, 13, 14], "csr_matrix": 13, "n_cd": 13, "time_strong_cd": 13, "time_active_cd": 13, "typic": 13, "matric": 13, "sub": 13, "modul": 13, "fit": 13, "scipi": 13, "spars": 13, "benchmark": 13, "perform": 13, "everi": 13, "intern": [], "For": 14, "pin_bas": [12, 14], "obj": [1, 7], "func": 3, "h_": 4, "star": [4, 5], "undefin": [4, 5], "behavior": [4, 5], "condit": [4, 5], "root_upper_bound": 4, "root_lower_bound": 5, "also": 8, "core_mat": 9, "wrapper": [9, 11], "python": [9, 11], "inherit": [9, 11], "from": [9, 11, 13], "usual": [9, 11], "core_st": 11, "core": 11, "export": 11, "deduc": 12, "variabl": 12, "strong_var": [12, 13, 14], "rsq_slope_tol": [13, 14], "rsq_curv_tol": [13, 14], "rang": 13, "grab": 13, "100000": 14, "01": 14}, "objects": {"adelie.bcd": [[1, 0, 1, "", "objective"], [2, 0, 1, "", "root"], [3, 0, 1, "", "root_function"], [4, 0, 1, "", "root_lower_bound"], [5, 0, 1, "", "root_upper_bound"], [6, 0, 1, "", "solve"]], "adelie.grpnet": [[7, 0, 1, "", "objective"], [8, 0, 1, "", "solve_pin"]], "adelie.matrix": [[9, 1, 1, "", "base"], [10, 1, 1, "", "dense"]], "adelie.matrix.base": [[9, 2, 1, "", "__init__"]], "adelie.matrix.dense": [[10, 2, 1, "", "__init__"]], "adelie.state": [[11, 1, 1, "", "base"], [12, 0, 1, "", "deduce_states"], [13, 1, 1, "", "pin_base"], [14, 1, 1, "", "pin_naive"]], "adelie.state.base": [[11, 2, 1, "", "__init__"]], "adelie.state.pin_base": [[13, 2, 1, "", "__init__"]], "adelie.state.pin_naive": [[14, 2, 1, "", "__init__"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "refer": 0, "grpglmnet": [], "group_elnet": [], "bcd_root_funct": [], "bcd_root_lower_bound": [], "bcd_root_upper_bound": [], "bcd_updat": [], "": [], "document": 15, "groupelnetnaivebasest": [], "groupelnetnaivedensest": [], "object": [1, 7], "bcd_object": [], "adeli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "bcd": [0, 1, 2, 3, 4, 5, 6], "matrix": [0, 9, 10], "root": 2, "root_funct": 3, "root_lower_bound": 4, "root_upper_bound": 5, "solv": 6, "dens": 10, "state": [0, 11, 12, 13, 14], "grpnet": [0, 7, 8], "solve_pin": 8, "pin_bas": 13, "pin_naiv": 14, "base": [9, 11], "deduce_st": 12}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "adelie.bcd": [[0, "adelie-bcd"]], "adelie.matrix": [[0, "adelie-matrix"]], "adelie.state": [[0, "adelie-state"]], "adelie.grpnet": [[0, "adelie-grpnet"]], "adelie.bcd.objective": [[1, "adelie-bcd-objective"]], "adelie.bcd.root": [[2, "adelie-bcd-root"]], "adelie.bcd.root_function": [[3, "adelie-bcd-root-function"]], "adelie.bcd.root_lower_bound": [[4, "adelie-bcd-root-lower-bound"]], "adelie.bcd.root_upper_bound": [[5, "adelie-bcd-root-upper-bound"]], "adelie.bcd.solve": [[6, "adelie-bcd-solve"]], "adelie.grpnet.objective": [[7, "adelie-grpnet-objective"]], "adelie.grpnet.solve_pin": [[8, "adelie-grpnet-solve-pin"]], "adelie.matrix.base": [[9, "adelie-matrix-base"]], "adelie.matrix.dense": [[10, "adelie-matrix-dense"]], "adelie.state.base": [[11, "adelie-state-base"]], "adelie.state.deduce_states": [[12, "adelie-state-deduce-states"]], "adelie.state.pin_base": [[13, "adelie-state-pin-base"]], "adelie.state.pin_naive": [[14, "adelie-state-pin-naive"]], "Adelie Documentation": [[15, "adelie-documentation"]]}, "indexentries": {"objective() (in module adelie.bcd)": [[1, "adelie.bcd.objective"]], "root() (in module adelie.bcd)": [[2, "adelie.bcd.root"]], "root_function() (in module adelie.bcd)": [[3, "adelie.bcd.root_function"]], "root_lower_bound() (in module adelie.bcd)": [[4, "adelie.bcd.root_lower_bound"]], "root_upper_bound() (in module adelie.bcd)": [[5, "adelie.bcd.root_upper_bound"]], "solve() (in module adelie.bcd)": [[6, "adelie.bcd.solve"]], "objective() (in module adelie.grpnet)": [[7, "adelie.grpnet.objective"]], "solve_pin() (in module adelie.grpnet)": [[8, "adelie.grpnet.solve_pin"]], "__init__() (adelie.matrix.base method)": [[9, "adelie.matrix.base.__init__"]], "base (class in adelie.matrix)": [[9, "adelie.matrix.base"]], "__init__() (adelie.matrix.dense method)": [[10, "adelie.matrix.dense.__init__"]], "dense (class in adelie.matrix)": [[10, "adelie.matrix.dense"]], "__init__() (adelie.state.base method)": [[11, "adelie.state.base.__init__"]], "base (class in adelie.state)": [[11, "adelie.state.base"]], "deduce_states() (in module adelie.state)": [[12, "adelie.state.deduce_states"]], "__init__() (adelie.state.pin_base method)": [[13, "adelie.state.pin_base.__init__"]], "pin_base (class in adelie.state)": [[13, "adelie.state.pin_base"]], "__init__() (adelie.state.pin_naive method)": [[14, "adelie.state.pin_naive.__init__"]], "pin_naive (class in adelie.state)": [[14, "adelie.state.pin_naive"]]}})