name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI

on: 
  push:
    tags:
      - v*

jobs:
  build:
    name: Build distribution 📦
    strategy:
      matrix:
        buildplat: 
          - [ubuntu-latest, manylinux_x86_64]
          - [macos-14, macosx_arm64]
        python: 
          - ["cp39", '3.9']
          - ["cp310", '3.10']
          - ["cp311", '3.11']
          - ["cp312", '3.12']
    runs-on: ${{ matrix.buildplat[0] }}
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v3
    #  with:
    #    python-version: ${{ matrix.python[1] }}
    #- uses: mamba-org/setup-micromamba@v1
    #  with:
    #    create-args: >-
    #      python=${{ matrix.python[1] }}
    #    environment-file: environment.yml
    #    init-shell: >-
    #      bash
    #    post-cleanup: 'all'
    - if: ${{ matrix.buildplat[0] == 'macos-14' }}
      name: Install Homebrew and libomp
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        brew install libomp
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.5
      env:
        CIBW_BEFORE_BUILD: |
          pip install poetry 
          poetry install --without test,dev,doc --no-root
        CIBW_BUILD: ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
          name: ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}
          path: ./wheelhouse/*.whl

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/adelie
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v1.2.3
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/adelie

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
